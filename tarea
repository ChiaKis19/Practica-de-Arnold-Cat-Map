import numpy as np
import cv2
import matplotlib.pyplot as plt

def acm(imag, itera=1):
    
    result = imag.copy()
    N = 255 #tamaño
    
    for _ in range(itera):
        temp = np.zeros_like(result)
        for y in range(N):
            for x in range(N):
                new_x = (x + y) % N
                new_y = (x + 2 * y) % N
                temp[new_y, new_x] = result[y, x]
        result = temp
    return result

def cm(original):
    transformada = original.copy()
    periodo = 0
    min_corr = 1.0
    mejor_iteracion = 0
    
    while True:
        transformada = acm(transformada, 1)
        periodo += 1
        corr = np.corrcoef(original.flatten(), transformada.flatten())[0, 1]
        

        if corr < min_corr:
            min_corr = corr
            mejor_iteracion = periodo
        
        if np.array_equal(transformada, original):
            return periodo, mejor_iteracion, min_corr
        
def main():
    original = cv2.imread("img.png", cv2.IMREAD_GRAYSCALE)#carga la imagen
    periodo, iter_menor_corr, min_corr = cm(original)
    scrambled = acm(original, iter_menor_corr)  # Imagen con menor correlación
    recuperada = acm(scrambled, periodo - iter_menor_corr)  # Recuperación exacta


    print(f"Periodo total: {periodo} iteraciones")
    


    plt.figure(figsize=(15, 5))
    plt.subplot(131); plt.imshow(original, cmap='gray'); plt.title("Original")
    plt.subplot(132); plt.imshow(scrambled, cmap='gray'); plt.title(f"Transformada (iteracion {iter_menor_corr})")
    plt.subplot(133); plt.imshow(recuperada, cmap='gray'); plt.title("Recuperada")
    plt.show()

if __name__ == "__main__":
    main()
